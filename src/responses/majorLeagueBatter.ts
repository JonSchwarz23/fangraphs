import { z } from "zod";

enum HittingSide {
    Right = "R",
    Left = "L",
    Both = "B",
}
const HittingSideEnum = z.nativeEnum(HittingSide);

//TODO: Come back and make these strict
const MajorLeagueBatterSchema = z
    .object({
        Bats: HittingSideEnum,
        xMLBAMID: z.number().int(),
        Name: z.string().min(1),
        Age: z.number().int(),
        G: z.number().int(),
        AB: z.number().int(),
        PA: z.number().int(),
        H: z.number().int(),
        "1B": z.number().int(),
        "2B": z.number().int(),
        "3B": z.number().int(),
        HR: z.number().int(),
        R: z.number().int(),
        RBI: z.number().int(),
        BB: z.number().int(),
        IBB: z.number().int(),
        SO: z.number().int(),
        HBP: z.number().int(),
        SF: z.number().int(),
        SH: z.number().int(),
        GDP: z.number().int(),
        SB: z.number().int(),
        CS: z.number().int(),
        AVG: z.number(),
        GB: z.number().int(),
        FB: z.number().int(),
        LD: z.number().int(),
        IFFB: z.number().int(),
        Pitches: z.number().int(),
        Balls: z.number().int(),
        Strikes: z.number().int(),
        IFH: z.number().int(),
        BU: z.number().int(),
        BUH: z.number().int(),
        "BB%": z.number(),
        "K%": z.number(),
        "BB/K": z.number(),
        OBP: z.number(),
        SLG: z.number(),
        OPS: z.number(),
        ISO: z.number(),
        BABIP: z.number(),
        "GB/FB": z.number(),
        "LD%": z.number().nullish(),
        "GB%": z.number(),
        "FB%": z.number(),
        "IFFB%": z.number(),
        "HR/FB": z.number(),
        "IFH%": z.number(),
        "BUH%": z.number(),
        "TTO%": z.number().nullish(),
        wOBA: z.number(),
        wRAA: z.number(),
        wRC: z.number(),
        Batting: z.number(),
        Fielding: z.number().nullish(),
        Replacement: z.number(),
        Positional: z.number(),
        wLeague: z.number(),
        CFraming: z.number().nullish(),
        Defense: z.number(),
        Offense: z.number(),
        RAR: z.number(),
        WAR: z.number(),
        Dollars: z.number(),
        BaseRunning: z.number(),
        Spd: z.number(),
        "wRC+": z.number().nullish(),
        wBsR: z.number(),
        WPA: z.number().nullish(),
        "-WPA": z.number().nullish(),
        "+WPA": z.number().nullish(),
        RE24: z.number().nullish(),
        REW: z.number().nullish(),
        pLI: z.number().nullish(),
        phLI: z.number().nullish(),
        PH: z.number().int(),
        "WPA/LI": z.number().nullish(),
        Clutch: z.number().nullish(),
        "FB%1": z.number().nullish(),
        "SL%": z.number().nullish(),
        "CT%": z.number().nullish(),
        "CB%": z.number().nullish(),
        "CH%": z.number().nullish(),
        "SF%": z.number().nullish(),
        "KN%": z.number().nullish(),
        "XX%": z.number().nullish(),
        "PO%": z.number().nullish(),
        wFB: z.number().nullish(),
        wSL: z.number().nullish(),
        wCT: z.number().nullish(),
        wCB: z.number().nullish(),
        wCH: z.number().nullish(),
        wSF: z.number().nullish(),
        wKN: z.number().nullish(),
        "wFB/C": z.number().nullish(),
        "wSL/C": z.number().nullish(),
        "wCT/C": z.number().nullish(),
        "wCB/C": z.number().nullish(),
        "wCH/C": z.number().nullish(),
        "wSF/C": z.number().nullish(),
        "wKN/C": z.number().nullish(),
        "O-Swing%": z.number().nullish(),
        "Z-Swing%": z.number().nullish(),
        "Swing%": z.number().nullish(),
        "O-Contact%": z.number().nullish(),
        "Z-Contact%": z.number().nullish(),
        "Contact%": z.number().nullish(),
        "Zone%": z.number().nullish(),
        "F-Strike%": z.number().nullish(),
        "SwStr%": z.number().nullish(),
        "CStr%": z.number().nullish(),
        "C+SwStr%": z.number().nullish(),
        Pull: z.number().int().nullish(),
        Cent: z.number().int().nullish(),
        Oppo: z.number().int().nullish(),
        Soft: z.number().int().nullish(),
        Med: z.number().int().nullish(),
        Hard: z.number().int().nullish(),
        bipCount: z.number().int().nullish(),
        "Pull%": z.number().nullish(),
        "Cent%": z.number().nullish(),
        "Oppo%": z.number().nullish(),
        "Soft%": z.number().nullish(),
        "Med%": z.number().nullish(),
        "Hard%": z.number().nullish(),
        UBR: z.number().nullish(),
        GDPRuns: z.number().nullish(),
        "AVG+": z.number().nullish(),
        "BB%+": z.number().nullish(),
        "K%+": z.number().nullish(),
        "OBP+": z.number().nullish(),
        "SLG+": z.number().nullish(),
        "ISO+": z.number().nullish(),
        "BABIP+": z.number().nullish(),
        "LD%+": z.number().nullish(),
        "GB%+": z.number().nullish(),
        "FB%+": z.number().nullish(),
        "HRFB%+": z.number().nullish(),
        "Pull%+": z.number().nullish(),
        "Cent%+": z.number().nullish(),
        "Oppo%+": z.number().nullish(),
        "Soft%+": z.number().nullish(),
        "Med%+": z.number().nullish(),
        "Hard%+": z.number().nullish(),
        xwOBA: z.number().nullish(),
        xAVG: z.number().nullish(),
        xSLG: z.number().nullish(),
        //Skipping Pitcher Pitch Time Violations (Maybe add later)
        EV: z.number().nullish(),
        LA: z.number().nullish(),
        Barrels: z.number().int().nullish(),
        "Barrel%": z.number().nullish(),
        maxEV: z.number().nullish(),
        HardHit: z.number().int().nullish(),
        "HardHit%": z.number().nullish(),
        Q: z.number(),
        TPA: z.number().int(),
        PlayerNameRoute: z.string().min(1),
        PlayerName: z.string().min(1),
        playerid: z.number().int(),
        TeamName: z.string().min(1),
        TeamNameAbb: z.string().min(1),
        teamid: z.number().int(),
    })
    .transform((obj) => {
        return {
            hittingSide: obj.Bats,
            mlbId: obj.xMLBAMID,
            position: obj.Name.split("position=")[1].split('"')[0],
            age: obj.Age,
            games: obj.G,
            atBats: obj.AB,
            plateAppearances: obj.PA,
            hits: obj.H,
            singles: obj["1B"],
            doubles: obj["2B"],
            triples: obj["3B"],
            homeRuns: obj.HR,
            runs: obj.R,
            runsBattedIn: obj.RBI,
            walks: obj.BB,
            intentionalWalks: obj.IBB,
            strikeouts: obj.SO,
            hitByPitch: obj.HBP,
            sacrificeFlies: obj.SF,
            sacrificeHits: obj.SH,
            groundedIntoDoublePlays: obj.GDP,
            stolenBases: obj.SB,
            caughtStealing: obj.CS,
            battingAverage: obj.AVG,
            groundBalls: obj.GB,
            flyBalls: obj.FB.toString(),
            lineDrives: obj.LD,
            infieldFlyBalls: obj.IFFB,
            totalPitchesFaced: obj.Pitches,
            balls: obj.Balls,
            strikes: obj.Strikes,
            infieldHits: obj.IFH,
            bunts: obj.BU,
            buntHits: obj.BUH,
            walkRate: obj["BB%"],
            strikeoutRate: obj["K%"],
            walkToStrikeoutRatio: obj["BB/K"],
            onBasePercentage: obj.OBP,
            sluggingPercentage: obj.SLG,
            onBasePlusSlugging: obj.OPS,
            isolatedPower: obj.ISO,
            battingAverageOnBallsInPlay: obj.BABIP,
            groundBallToFlyBallRatio: obj["GB/FB"],
            lineDrivePercentage: obj["LD%"],
            groundBallPercentage: obj["GB%"],
            flyBallPercentage: obj["FB%"],
            infieldFlyBallPercentage: obj["IFFB%"],
            homeRunPerFlyBallRatio: obj["HR/FB"],
            infieldHitPercentage: obj["IFH%"],
            buntHitPercentage: obj["BUH%"],
            threeTrueOutcomesPercentage: obj["TTO%"],
            weightedOnBaseAverage: obj.wOBA,
            weightedRunsAboveAverage: obj.wRAA,
            weightedRunsCreated: obj.wRC,
            battingRunsAboveAverage: obj.Batting,
            fieldingRunsAboveAverage: obj.Fielding,
            replacementRuns: obj.Replacement,
            positionalAdjustment: obj.Positional,
            leagueAdjustment: obj.wLeague,
            framingValue: obj.CFraming,
            defensiveRunsAboveAverage: obj.Defense,
            offensiveRunsAboveAverage: obj.Offense,
            runsAboveReplacement: obj.RAR,
            winsAboveReplacement: obj.WAR,
            warDollars: obj.Dollars,
            baseRunningRunsAboveAverage: obj.BaseRunning,
            speedScore: obj.Spd,
            weightedRunsCreatedPlus: obj["wRC+"],
            weightedBaseRunning: obj.wBsR,
            winProbabilityAdded: obj.WPA,
            lossAdvancement: obj["-WPA"],
            winAdvancement: obj["+WPA"],
            runsAboveAverage24: obj.RE24,
            winsAboveAverage24: obj.REW,
            averageLeverageIndex: obj.pLI,
            averageLeverageIndexWhilePinchHinting: obj.phLI,
            pinchHitOpportunities: obj.PH,
            situationalWins: obj["WPA/LI"],
            clutch: obj.Clutch,
            fastballPercentage: obj["FB%1"],
            sliderPercentage: obj["SL%"],
            cutterPercentage: obj["CT%"],
            curveballPercentage: obj["CB%"],
            changeupPercentage: obj["CH%"],
            splitFingerPercentage: obj["SF%"],
            knuckleballPercentage: obj["KN%"],
            unknownPitchPercentage: obj["XX%"],
            pitchoutPercentage: obj["PO%"],
            fastballRunsAboveAverage: obj.wFB,
            sliderRunsAboveAverage: obj.wSL,
            cutterRunsAboveAverage: obj.wCT,
            curveballRunsAboveAverage: obj.wCB,
            changeupRunsAboveAverage: obj.wCH,
            splitFingerRunsAboveAverage: obj.wSF,
            knuckleballRunsAboveAverage: obj.wKN,
            fastballRunsAboveAveragePer100Pitches: obj["wFB/C"],
            sliderRunsAboveAveragePer100Pitches: obj["wSL/C"],
            cutterRunsAboveAveragePer100Pitches: obj["wCT/C"],
            curveballRunsAboveAveragePer100Pitches: obj["wCB/C"],
            changeupRunsAboveAveragePer100Pitches: obj["wCH/C"],
            splitFingerRunsAboveAveragePer100Pitches: obj["wSF/C"],
            knuckleballRunsAboveAveragePer100Pitches: obj["wKN/C"],
            outsideZoneSwingPercentage: obj["O-Swing%"],
            zoneSwingPercentage: obj["Z-Swing%"],
            swingPercentage: obj["Swing%"],
            outsideZoneContactPercentage: obj["O-Contact%"],
            zoneContactPercentage: obj["Z-Contact%"],
            contactPercentage: obj["Contact%"],
            zonePercentage: obj["Zone%"],
            firstPitchStrikePercentage: obj["F-Strike%"],
            swingingStrikePercentage: obj["SwStr%"],
            calledStrikePercentage: obj["CStr%"],
            calledPlusSwingingStrikePercentage: obj["C+SwStr%"],
            pullHits: obj.Pull,
            centerFieldHits: obj.Cent,
            oppositeFieldHits: obj.Oppo,
            softContactHits: obj.Soft,
            mediumContactHits: obj.Med,
            hardContactHits: obj.Hard,
            ballsInPlay: obj.bipCount,
            pullPercentage: obj["Pull%"],
            centerFieldPercentage: obj["Cent%"],
            oppositeFieldPercentage: obj["Oppo%"],
            softContactPercentage: obj["Soft%"],
            mediumContactPercentage: obj["Med%"],
            hardContactPercentage: obj["Hard%"],
            ultimateBaseRunning: obj.UBR,
            groundingIntoDoublePlayRunsAboveAverage: obj.GDPRuns,
            battingAveragePlus: obj["AVG+"],
            walkRatePlus: obj["BB%+"],
            strikeoutRatePlus: obj["K%+"],
            onBasePercentagePlus: obj["OBP+"],
            sluggingPercentagePlus: obj["SLG+"],
            isolatedPowerPlus: obj["ISO+"],
            battingAverageOnBallsInPlayPlus: obj["BABIP+"],
            lineDrivePercentagePlus: obj["LD%+"],
            groundBallPercentagePlus: obj["GB%+"],
            flyBallPercentagePlus: obj["FB%+"],
            homeRunPerFlyBallRatioPlus: obj["HRFB%+"],
            pullPercentagePlus: obj["Pull%+"],
            centerFieldPercentagePlus: obj["Cent%+"],
            oppositeFieldPercentagePlus: obj["Oppo%+"],
            softContactPercentagePlus: obj["Soft%+"],
            mediumContactPercentagePlus: obj["Med%+"],
            hardContactPercentagePlus: obj["Hard%+"],
            expectedWeightedOnBaseAverage: obj.xwOBA,
            expectedBattingAverage: obj.xAVG,
            expectedSluggingPercentage: obj.xSLG,
            averageExitVelocity: obj.EV,
            averageLaunchAngle: obj.LA,
            barrels: obj.Barrels,
            barrelPercentage: obj["Barrel%"],
            maxExitVelocity: obj.maxEV,
            hardHits: obj.HardHit,
            hardHitPercentage: obj["HardHit%"],
            plateAppearancesForQualifying: obj.Q,
            totalPlateAppearances: obj.TPA,
            playerNameRoute: obj.PlayerNameRoute,
            playerName: obj.PlayerName,
            playerId: obj.playerid,
            teamName: obj.TeamName,
            teamNameAbbreviation: obj.TeamNameAbb,
            teamId: obj.teamid,
        };
    });
type MajorLeagueBatter = z.infer<typeof MajorLeagueBatterSchema>;

export { MajorLeagueBatter, MajorLeagueBatterSchema };
